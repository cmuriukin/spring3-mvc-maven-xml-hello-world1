# name: Java CI with Maven

# on: push

# jobs:
#   build:

#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v3
#     - name: Set up JDK 8
#       uses: actions/setup-java@v3
#       with:
#         java-version: '8'
#         distribution: 'temurin'
#         cache: maven
#     - name: Build with Maven
#       run: mvn package
#     - name: Archive artifacts
#       uses: actions/upload-artifact@v2
#       with:
#         name: maven-artifacts
#         path: target/*.jar 
# #     - name: tomcat deploy
# #       run: curl -v -u  ${{ secrets.TOMCAT_USERNAME }}:${{ secrets.TOMCAT_PASSWORD }} -T /home/ec2-user/actions-runner/_work/spring3-mvc-maven-xml-hello-world/spring3-mvc-maven-xml-hello-world/target/spring3-mvc-maven-xml-hello-world-1.3.war 'http://65.2.37.3:8080/manager/text/deploy?path=/github_action_spring&update=true'
# # #
# # # ############################################################################################################
# name: Build

# on: push

# jobs:
#   build:
#     name: Build
#     runs-on: ubuntu-latest
#     permissions: read-all
#     steps:
#       - uses: actions/checkout@v2
#         with:
#           fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
#       - name: Set up JDK 17
#         uses: actions/setup-java@v1
#         with:
#           java-version: 17
#       - name: Cache SonarQube packages
#         uses: actions/cache@v1
#         with:
#           path: ~/.sonar/cache
#           key: ${{ runner.os }}-sonar
#           restore-keys: ${{ runner.os }}-sonar
#       - name: Cache Maven packages
#         uses: actions/cache@v1
#         with:
#           path: ~/.m2
#           key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
#           restore-keys: ${{ runner.os }}-m2
#       - name: Build and analyze
#         env:
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#           SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
#         run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=my-maven-project -Dsonar.projectName='my-maven-project'
#       - name: Archive Maven artifacts
#         uses: actions/upload-artifact@v2
#         with:
#           name: maven-artifacts
#           path: '**/*.war' 

#############################################################################################
name: Build

on: push
jobs:
  checkout_setup_and_scan:
    name: Checkout code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Scan code
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: mvn -B org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=my-maven-project -Dsonar.projectName='my-maven-project'

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: setup_and_scan
    steps:
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build Maven project
        run: mvn -B verify

  artifacts:
    name: Archive Maven artifacts
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Archive Maven artifacts
        uses: actions/upload-artifact@v2
        with:
          name: maven-artifacts
          path: target/*.war  # Assuming you want to store .war artifacts

